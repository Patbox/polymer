archivesBaseName = "polymer-core"
version = rootProject.mod_version + "+" + rootProject.minecraft_version
group = rootProject.maven_group

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

loom {
    runs {
        testmodClient {
            client()
            name = "(Core) Testmod Client"
            source sourceSets.testmod
        }
        testmodServer {
            server()
            name = "(Core) Testmod Server"
            source sourceSets.testmod
        }
    }

    accessWidenerPath = file("src/main/resources/polymer-core.accesswidener")

    enableTransitiveAccessWideners = false
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

dependencies {

    // Fabric API. This is technically optional, but you probably want it anyway.
    modCompileOnly "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"
    modLocalRuntime "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"

    //modRuntime "supercoder79:databreaker:0.2.7"

    modCompileOnly('maven.modrinth:lithium:mc1.21-0.12.7')

    //modCompileOnly ('nl.theepicblock:PolyMc:5.1.0+1.19')
    modCompileOnly('com.github.TheEpicBlock:PolyMc:5.6.1') {
        exclude(group: "org.quiltmc", module: "quilt-loader")
    }


    modCompileOnly /*modLocalRuntime*/("maven.modrinth:jade:14.1.0+fabric")
    modCompileOnly /*modLocalRuntime*/("mcp.mobius.waila:wthit:fabric-11.2.0")

    modCompileOnly /*modLocalRuntime*/ ("me.shedaniel:RoughlyEnoughItems-fabric:16.0.744")
    modCompileOnly /*modLocalRuntime*/("dev.emi:emi-fabric:1.1.6+1.20.6")

    //modCompileOnlyApi modLocalRuntime("mezz.jei:jei-1.19-common:11.0.0.206")
    //modCompileOnlyApi modLocalRuntime("mezz.jei:jei-1.19-fabric:11.0.0.206")
    modCompileOnly /*modRuntimeOnly*/("maven.modrinth:jei:lIRFslED")

    //modCompileOnly ("mcjty.theoneprobe:theoneprobe-fabric:1.18.2-5.0.9")
    //modRuntimeOnly ("mcjty.theoneprobe:theoneprobe-fabric:1.18.2-5.0.9")

    modCompileOnly "xyz.nucleoid:disguiselib-fabric:1.2.2"

    modCompileOnly("xyz.nucleoid:server-translations-api:2.3.0+1.20.5-rc2")
    //modLocalRuntime("xyz.nucleoid:server-translations-api:2.0.0-beta.2+1.19.4-pre2")

    modCompileOnly 'com.github.iPortalTeam:ImmersivePortalsMod:v5.1.0-mc1.20.4'

    //modLocalRuntime 'maven.modrinth:immersiveportals:v3.0.2-mc1.20'
    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    testmodImplementation sourceSets.main.output

    api include(project(path: ':polymer-reg-sync-manipulator', configuration: 'namedElements'))
    api project(path: ':polymer-common', configuration: 'namedElements')
    api include(project(path: ':polymer-networking', configuration: 'namedElements'))

    compileOnly (project(path: ':polymer-resource-pack', configuration: 'namedElements'))
    localRuntime (project(path: ':polymer-resource-pack', configuration: 'namedElements'))

    compileOnly (project(path: ':polymer-virtual-entity', configuration: 'namedElements'))
    localRuntime (project(path: ':polymer-virtual-entity', configuration: 'namedElements'))
}


afterEvaluate {
    // Disable the gen sources task on sub projects
    genSourcesWithFernFlower.enabled = true
    genSourcesWithCfr.enabled = false
}
