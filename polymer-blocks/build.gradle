archivesBaseName = "polymer-blocks"
version = rootProject.blocks_ext_version + "+" + rootProject.minecraft_version


sourceSets {
    testmod {
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.compileClasspath
    }
}

loom {
    runs {
        testmodClient {
            client()
            ideConfigGenerated project.rootProject == project
            name = "(Blocks) Test Mod Client"
            source sourceSets.testmod
        }
        testmodServer {
            server()
            ideConfigGenerated project.rootProject == project
            name = "(Blocks) Test Mod Server"
            source sourceSets.testmod
        }
    }
}

dependencies {
    modRuntimeOnly "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"
    modCompileOnly "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"

    implementation(project(path: ':polymer', configuration: 'namedElements'))
    modImplementation "xyz.nucleoid:packet-tweaker:0.2.0+1.18-pre1"
    modCompileOnly "me.lucko:fabric-permissions-api:0.1-SNAPSHOT"

    //modLocalRuntime "fr.catcore:server-translations-api:1.4.9+1.18.2-rc1"
    //modCompileOnly "fr.catcore:server-translations-api:1.4.9+1.18.2-rc1"

    modCompileOnly 'com.github.TheEpicBlock:PolyMc:4.0.0'
    //modRuntimeOnly 'com.github.TheEpicBlock:PolyMc:4.0.0'

    testmodImplementation sourceSets.main.output
    testmodImplementation project(":polymer").sourceSets.testmod.output
}


processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}
